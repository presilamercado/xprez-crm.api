meta {
  name: Update Customer
  type: http
  seq: 3
}

put {
  url: {{BASE_URL}}/api/v1/customers/{{customerID}}
  body: json
  auth: none
}

body:json {
  {
    "email": "{{updatedEmail}}",
    "phone": "{{updatedPhone}}",
    "companyName": "{{updatedCompanyName}}",
    "notes": "{{updatedNotes}}",
    "isActive": {{updatedIsActive}}
  }
}

script:pre-request {
  // First create a customer to update
  const timestamp = Date.now();
  let initialData = {
    "email": `initial.customer.${timestamp}@example.com`,
    "phone": "0279603144",
    "companyName": "Initial Company",
    "notes": "Initial notes",
    "isActive": true
  };
  
  try {
    // Create initial customer
    const createResponse = await postCustomer(initialData);
    
    if (createResponse && createResponse.data && createResponse.data.id) {
      const customerId = createResponse.data.id;
      bru.setVar('customerID', customerId);
      
      // Set updated data
      const updatedData = {
        "email": `updated.customer.${timestamp}@example.com`,
        "phone": "0279603999",
        "companyName": "Updated Company Name",
        "notes": "Updated notes for customer",
        "isActive": false
      };
      
      // Set variables for the request body
      bru.setVar('updatedEmail', updatedData.email);
      bru.setVar('updatedPhone', updatedData.phone);
      bru.setVar('updatedCompanyName', updatedData.companyName);
      bru.setVar('updatedNotes', updatedData.notes);
      bru.setVar('updatedIsActive', updatedData.isActive);
      
      console.log('Created customer with ID:', customerId);
      console.log('Will update with:', updatedData);
      
    } else {
      throw new Error('Failed to create initial customer');
    }
  } catch (error) {
    console.error('Error in pre-request:', error.message);
    throw error;
  }
}

script:post-response {
  const { status, data } = res;
  
  if (status === 200) {
    console.log('Customer updated successfully:', data);
    
    // Verify the update
    if (data.email === bru.getVar('updatedEmail') &&
        data.companyName === bru.getVar('updatedCompanyName')) {
      console.log('✅ Update verification passed');
    } else {
      console.log('❌ Update verification failed');
    }
  } else {
    console.error('Update failed with status:', status);
  }
}

settings {
  encodeUrl: true
}